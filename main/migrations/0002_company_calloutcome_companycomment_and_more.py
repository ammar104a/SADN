# Generated by Django 5.1.5 on 2025-01-16 10:35

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('main', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('company_type', models.CharField(choices=[('PROSPECT', 'Prospect'), ('CLIENT', 'Client'), ('FORMER_CLIENT', 'Former Client'), ('LEAD', 'Lead')], max_length=20)),
                ('phone_number', models.CharField(max_length=20)),
                ('location', models.CharField(max_length=200)),
                ('website', models.URLField(blank=True)),
                ('industry', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('facebook_url', models.URLField(blank=True, verbose_name='Facebook URL')),
                ('instagram_handle', models.CharField(blank=True, max_length=30, verbose_name='Instagram Handle')),
                ('twitter_handle', models.CharField(blank=True, max_length=15, verbose_name='Twitter Handle')),
                ('linkedin_url', models.URLField(blank=True, verbose_name='LinkedIn URL')),
                ('youtube_channel', models.URLField(blank=True, verbose_name='YouTube Channel')),
                ('tiktok_handle', models.CharField(blank=True, max_length=30, verbose_name='TikTok Handle')),
                ('social_links', models.JSONField(blank=True, default=dict, help_text='Store additional social media links as key-value pairs')),
                ('previous_call_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Companies',
            },
        ),
        migrations.CreateModel(
            name='CallOutcome',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('outcome_type', models.CharField(choices=[('MEETING_SCHEDULED', 'Meeting Scheduled'), ('CALLBACK', 'Call Back Later'), ('NOT_AVAILABLE', 'Not Available')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('meeting_datetime', models.DateTimeField(blank=True, null=True)),
                ('meeting_notes', models.TextField(blank=True)),
                ('meeting_platform', models.CharField(blank=True, help_text='Platform for virtual meetings (Zoom, Teams, etc.)', max_length=50)),
                ('callback_datetime', models.DateTimeField(blank=True, null=True)),
                ('callback_notes', models.TextField(blank=True)),
                ('preferred_contact_method', models.CharField(blank=True, help_text='Phone, Email, or specific social platform', max_length=50)),
                ('not_available_reason', models.TextField(blank=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='call_outcomes', to=settings.AUTH_USER_MODEL)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='call_outcomes', to='main.company')),
            ],
        ),
        migrations.CreateModel(
            name='CompanyComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='main.company')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_comments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CustomerCallProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('best_contact_time', models.CharField(blank=True, choices=[('MORNING', 'Morning (9AM-12PM)'), ('AFTERNOON', 'Afternoon (12PM-5PM)'), ('EVENING', 'Evening (5PM-8PM)')], max_length=20, null=True)),
                ('decision_maker_name', models.CharField(blank=True, max_length=200)),
                ('decision_maker_title', models.CharField(blank=True, max_length=200)),
                ('gatekeeper_name', models.CharField(blank=True, max_length=200)),
                ('direct_line', models.CharField(blank=True, max_length=20)),
                ('extension', models.CharField(blank=True, max_length=10)),
                ('notes', models.TextField(blank=True)),
                ('social_media_contact_name', models.CharField(blank=True, help_text='Name of social media manager or contact', max_length=200)),
                ('social_media_contact_email', models.EmailField(blank=True, max_length=254)),
                ('preferred_social_platform', models.CharField(blank=True, help_text='Preferred platform for communication', max_length=50)),
                ('company', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='call_profile', to='main.company')),
            ],
        ),
    ]
